version: "2.1"

volumes:
   postgres_data:
        driver: local

services:

  nginx:
        image: ${REGISTRY}trydirect/nginx:latest
        container_name: nginx
        env_file:
          .env
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - ./certs/ssl:/etc/ssl/nginx
          - ./certs/letsencrypt:/etc/letsencrypt
          - ./cron/nginx:/var/spool/cron/crontabs
          - ./nginx/conf.d:/etc/nginx/conf.d/
          - ./nginx/nginx.conf:/etc/nginx/nginx.conf
          - ./null:/etc/nginx/sites-enabled
          - ./supervisord/nginx.conf:/etc/supervisor/conf.d/nginx.conf
        depends_on:
          - oscar
        links:
          - oscar
        entrypoint: /usr/bin/supervisord -c /etc/supervisor/supervisord.conf -n
        restart: always

  postgres:
      container_name: postgres
      image: postgres:11.2
      restart: always
      ports:
          - 5432
      env_file:
        - .env
      volumes:
          - postgres_data:/var/lib/postgresql/data/pgdata
          - ./scripts/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh

  oscar:
      image: ${REGISTRY}optimum/crm:suitecrm-django-oscar-1.6.7
      container_name: oscar
      depends_on:
        - postgres
      links:
        - postgres
      env_file:
        - .env
      volumes:
        - ./supervisord/supervisord.conf:/etc/supervisor/supervisord.conf
        - ./configs/settings.py:/app/sandbox/settings.py
        - ./supervisord/oscar.conf:/etc/supervisor/conf.d/oscar.conf

  status:
    image: ${REGISTRY}trydirect/status:latest
    container_name: docker_status_panel
    ports:
      - "5000:5000"
    volumes:
      - ./nginx:/app/destination_conf
      - ./nginx_original:/app/origin_conf
      - ./config.json:/app/config.json
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
